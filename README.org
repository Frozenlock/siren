* siren

  A clojurescript library for easy growl-like notifications.

  Based on [[https://github.com/levand/domina][domina]] and [[https://github.com/ckirkendall/enfocus][enfocus]].

  Comes with two default color scheme: light and dark. You can of
  course give your own, either with CSS (the =siren-box= class) or by
  an optional argument.

** Usage

#+BEGIN_SRC
(sticky-siren! "I'm dark!")
(siren! {:content "I'm dark!})
(siren! {:content "I'm light!" :style :light})
(siren! {:html-content "<div>I'm light!</div><div>And complex!</div>" :style :light})
#+END_SRC
   [[./siren/raw/master/siren.jpg]]
   [[./siren.jpg]]

   The =sticky-siren!= will remain until discarded with =remove-siren= or
   =remove-all-sirens=.
   
   You can set the content of a siren however you like. Either directly,
   as =(siren! "Hey I'm content!") or as direct HTML data: (siren!
   {:html-content "<div>Oh, really?</div>"}).
   
   The style can be set by giving it directly to the siren
: (siren! {:style {:width "300px" :color "grey"} :content "Oy!"})
   Or by settign the CSS.

   Here are the possible options:
   - style
   - html-content
   - content
   - delay

: (siren! {:html-content "<div>Oy!</div> :style {:width "300px" :color "white" :background "black"} :delay 3000})
*** Complex input

    Siren is as friendly as possible; which mean you can send it
    directly what HTML you would like in it. You can send HTML with
    multiple =div= if you want to do so. You can also use [[https://github.com/cgrand/enlive][enlive]]
    templates. How about some image in the siren? You can really do
    what you want.

    To customize an existing siren box, use the =set-siren-content=
    function.
    
    May the power of the REPL be with you!

** License
   
   Copyright Â© 2012 Frozenlock
   
   Distributed under the Eclipse Public License, the same as Clojure.
